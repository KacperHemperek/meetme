generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String    @id @default(cuid())
  name              String?
  email             String?   @unique
  emailVerified     DateTime?
  image             String?
  accounts          Account[]
  sessions          Session[]
  createdMeetings   Meeting[] @relation("MeetingCreator")
  attendingMeetings Meeting[] @relation("MeetingMembers")
}

model Meeting {
  id          String                               @id @default(cuid())
  title       String
  startTime   DateTime
  endTime     DateTime
  creator     User                                 @relation("MeetingCreator", fields: [creatorId], references: [id])
  creatorId   String
  members     User[]                               @relation("MeetingMembers")
  description String
  location    Unsupported("geometry(Point, 4326)")

  @@index([creatorId], name: "creatorId")
  @@index([location], name: "location", type: Gist)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
